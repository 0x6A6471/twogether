open React
open Bindings

type error =
  { severity : [ `error | `success ]
  ; message : string
  }

type t =
  { error : error option
  ; set_error : (error option -> error option) -> unit
  }

type context_value = t

let init = { error = None; set_error = (fun _ -> ()) }
let toast_context = createContext init

module Provider = struct
  include Context

  let make = provider toast_context
end

module ToastProvider = struct
  let[@react.component] make ~children =
    let error, set_error = useState (fun _ -> None) in
    let value = { error; set_error } in
    let handle_change () =
      match error with
      | None -> ()
      | _ -> set_error (fun _ -> None)
    in
    <Provider value>
      children
      (match error with
       | Some e ->
         let color =
           match e.severity with
           | `error -> "bg-red-500 text-red-50 "
           | `success -> "bg-green-500 text-green-50"
         in
         let icon =
           match e.severity with
           | `error -> "alert-circle-filled"
           | `success -> "check-circle-2-filled"
         in
         <Radix.Toast.Provider>
           <Radix.Toast.Root onOpenChange=(fun _ -> handle_change ())
                             className=(color
                                        ^ " p-4 items-center rounded-xl \
                                           shadow-lg")>
             <Radix.Toast.Title className="flex gap-x-2 items-center \
                                           font-medium">
               <svg className=color height="16" width="16">
                 <use href=("/sprite.svg#" ^ icon) height="16" width="16" />
               </svg>
               (string e.message)
             </Radix.Toast.Title>
           </Radix.Toast.Root>
           <Radix.Toast.Viewport className="fixed bottom-4 right-4 z-50 m-0 \
                                            flex min-w-80 max-w-[100vw] \
                                            flex-col" />
         </Radix.Toast.Provider>
       | _ -> React.null)
    </Provider>
  ;;
end

open React
open Bindings

type severity =
  [ `error
  | `success
  ]

type t =
  { severity : severity option
  ; set_severity : (severity option -> severity option) -> unit
  ; message : string option
  ; set_message : (string option -> string option) -> unit
  }

type context_value = t

let init =
  { severity = None
  ; set_severity = (fun _ -> ())
  ; message = None
  ; set_message = (fun _ -> ())
  }
;;

let toast_context = createContext init

module Provider = struct
  include Context

  let make = provider toast_context
end

module ToastProvider = struct
  let[@react.component] make ~children =
    let message, set_message = useState (fun _ -> None) in
    let severity, set_severity = useState (fun _ -> None) in
    let value = { message; set_message; severity; set_severity } in
    let handle_change () =
      match severity with
      | None -> ()
      | _ ->
        set_message (fun _ -> None);
        set_severity (fun _ -> None)
    in
    <Provider value>
      children
      (match message, severity with
       | Some m, Some s ->
         let color =
           match s with
           | `error -> "bg-red-500 text-red-50 "
           | `success -> "bg-green-500 text-green-50"
         in
         <Radix.Toast.Provider>
           <Radix.Toast.Root onOpenChange=(fun _ -> handle_change ())
                             className=(color
                                        ^ " p-4 items-center rounded-xl \
                                           shadow-lg")>
             <Radix.Toast.Title className="">(string m)</Radix.Toast.Title>
           </Radix.Toast.Root>
           <Radix.Toast.Viewport className="fixed bottom-4 right-4 z-50 m-0 \
                                            flex min-w-80 max-w-[100vw] \
                                            flex-col" />
         </Radix.Toast.Provider>
       | _ -> React.null)
    </Provider>
  ;;
end
